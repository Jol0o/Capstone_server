generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Admin {
  id       Int    @id @default(autoincrement())
  email    String @unique
  password String
}

model Attendance {
  id            Int       @id @default(autoincrement())
  date          String
  time_in       String
  time_out      String
  attendance_id String
  employee_id   String
  hours         Int?
  employee      Employees @relation(fields: [employee_id], references: [employee_id])
}

model Employees {
  id               Int               @id @default(autoincrement())
  employee_id      String            @unique
  name             String
  created_at       DateTime          @default(now())
  salary_date      DateTime
  department       String
  position         String
  qrcode           String
  avatar           String?
  email            String            @unique
  phone_number     String            @unique
  salary           Int
  password         String
  day_off          Boolean?
  attendance       Attendance[]
  leaveRequests    LeaveRequest[]
  payrolls         Payroll[]
  smsNotifications SmsNotification[] @relation("EmployeeRelation")
  phoneNumbers     SmsNotification[] @relation("PhoneNumberRelation")
  users            User[]
}

model LeaveRequest {
  id          Int                @id @default(autoincrement())
  employee_id String?
  leave_type  String
  start_date  DateTime
  end_date    DateTime
  reason      String
  created_at  DateTime           @default(now())
  status      LeaveRequestStatus @default(Pending)
  employee    Employees?         @relation(fields: [employee_id], references: [employee_id])
}

model Payroll {
  id           Int       @id @default(autoincrement())
  payroll_id   String?
  employee_id  String
  hours_worked Float
  total_pay    Float
  created_at   DateTime  @default(now())
  employee     Employees @relation(fields: [employee_id], references: [employee_id])
}

model SmsNotification {
  id              Int       @id @default(autoincrement())
  notification_id String
  employee_id     String
  phone_number    String
  message         String
  sent_date       DateTime  @default(now())
  employee        Employees @relation(fields: [employee_id], references: [employee_id], name: "EmployeeRelation")
  phoneNumber     Employees @relation(fields: [phone_number], references: [phone_number], name: "PhoneNumberRelation")
}

model User {
  id          Int        @id @default(autoincrement())
  user_id     String     @unique
  email       String     @unique
  password    String
  employee_id String?
  employee    Employees? @relation(fields: [employee_id], references: [employee_id])
}

enum LeaveRequestStatus {
  Pending
  Process
  Approved
  Rejected
}
